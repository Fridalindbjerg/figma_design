---
//@ts-nocheck
import DynamicImage from "@components/helpers/DynamicImage.astro";
import caseStudy from "@data/caseStudy.json";
const { caseName, category, date, image, buttonLabel } = caseStudy.caseDetails;
---

<article class="container content">
  <header class="full">
    <DynamicImage imagePath={image} altText={caseName} />
    <div class="case-details margin">
      <dl>
        <div>
          <dt>Case Name</dt>
          <dd>{caseName}</dd>
        </div>
        <div>
          <dt>Category</dt>
          <dd class="category">{category}</dd>
        </div>
        <div>
          <dt>Date</dt>
          <dd class="date">{date}</dd>
        </div>
      </dl>
      <a href="#0" class="button">{buttonLabel}</a>
    </div>
  </header>
  {
    caseStudy.sections.map((section) => (
      <section class="feature">
        {caseStudy.sections[0] === section ? <h2>{section.title}</h2> : <h3>{section.title}</h3>}

        {Array.isArray(section.content) ? (
          <>
            {section.content.map((item) => (
              <p>{item}</p>
            ))}
          </>
        ) : (
          <p>{section.content}</p>
        )}
        {section.highlights && (
          <ul>
            {section.highlights.map((highlight) => (
              <li>{highlight}</li>
            ))}
          </ul>
        )}
        {section.image && <DynamicImage imagePath={section.image} altText={section.title} width={600} height={400} />}
      </section>
    ))
  }
</article>

<style>
  .content {
    --gap: clamp(1rem, 6vw, 3rem);
    --full: minmax(var(--gap), 1fr);
    --content: min(70ch, 100% - var(--gap) * 2);

    --feature: minmax(0, 6rem);

    display: grid;
    grid-template-columns:
      [full-start] var(--full)
      [feature-start] var(--feature)
      [content-start] var(--content) [content-end]
      var(--feature) [feature-end]
      var(--full) [full-end];
  }

  .content > * {
    grid-column: content;
  }

  .feature {
    grid-column: feature !important;
  }
  .full {
    grid-column: full !important;
  }

  article {
    margin: var(--space-2xl) 0;

    display: flex;
    flex-direction: column;
    gap: var(--space-l);

    header img {
      border-radius: 2rem;
      width: 100%;
      display: block;
    }
    .case-details {
      max-width: 90%; /* eller hvad du ønsker */
      margin: -5rem auto 0 auto;

      padding: 3.3125rem 2rem; /* top/bund og venstre/højre padding */
      display: flex;
      border-radius: 1.875rem;
      background-color: #000;
      color: white;
      position: relative;
      z-index: 2;
      flex-direction: column;

      gap: var(--space-m);
      @media (min-width: 768px) {
        flex-direction: row;
        justify-content: space-between;
      }

      dl {
        display: flex;
        align-items: flex-start;
        gap: 6.25rem;

        dt {
          font-weight: 600;
          font-size: var(--step--4);
        }
      }

      a {
        padding: 1rem 2.0625rem;
        background-color: var(--yellow);
        border-radius: 2.625rem;
        color: #000;
        font-weight: 600;

        width: auto;
        align-self: center;
      }
    }

    section {
      display: flex;
      flex-direction: column;
      gap: var(--space-m);

      ul {
        padding: 1rem;
        display: flex;
        flex-direction: column;
        gap: var(--space-xs);
      }

      ul,
      p {
        font-weight: 400;
        font-size: var(--step--5);
      }

      img {
        margin-left: auto;
        margin-right: auto;
        display: block;
      }
    }
  }

  h2 {
    font-weight: 600;
    font-size: var(--step--1);
  }

  h3 {
    font-weight: 600;
    font-size: var(--step--3);
  }
</style>
